# Generated by Django 4.2.24 on 2025-10-05 12:44

from decimal import Decimal
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('inventario', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('ventas', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ItemOrdenCompra',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('cantidad', models.DecimalField(decimal_places=3, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.001'))], verbose_name='Cantidad Ordenada')),
                ('cantidad_recibida', models.DecimalField(decimal_places=3, default=Decimal('0.000'), max_digits=10, verbose_name='Cantidad Recibida')),
                ('precio_unitario', models.DecimalField(decimal_places=4, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.0001'))], verbose_name='Precio Unitario')),
                ('descuento_porcentaje', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Descuento (%)')),
                ('descuento_valor', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=15, verbose_name='Descuento Valor')),
                ('total', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=15, verbose_name='Total')),
                ('observaciones', models.TextField(blank=True, verbose_name='Observaciones')),
            ],
            options={
                'verbose_name': 'Item Orden de Compra',
                'verbose_name_plural': 'Items Órdenes de Compra',
            },
        ),
        migrations.CreateModel(
            name='OrdenCompra',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('numero', models.CharField(max_length=20, unique=True, verbose_name='Número de Orden')),
                ('fecha_orden', models.DateField(default=django.utils.timezone.now, verbose_name='Fecha de Orden')),
                ('fecha_entrega_estimada', models.DateField(blank=True, null=True, verbose_name='Fecha Entrega Estimada')),
                ('fecha_entrega_real', models.DateField(blank=True, null=True, verbose_name='Fecha Entrega Real')),
                ('estado', models.CharField(choices=[('borrador', 'Borrador'), ('enviada', 'Enviada al Proveedor'), ('confirmada', 'Confirmada por Proveedor'), ('recibida_parcial', 'Recibida Parcialmente'), ('recibida_total', 'Recibida Totalmente'), ('cancelada', 'Cancelada')], default='borrador', max_length=20, verbose_name='Estado')),
                ('subtotal', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=15, verbose_name='Subtotal')),
                ('descuento_porcentaje', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Descuento (%)')),
                ('descuento_valor', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=15, verbose_name='Valor Descuento')),
                ('impuestos', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=15, verbose_name='Impuestos')),
                ('total', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=15, verbose_name='Total')),
                ('observaciones', models.TextField(blank=True, verbose_name='Observaciones')),
                ('condiciones_especiales', models.TextField(blank=True, verbose_name='Condiciones Especiales')),
                ('numero_referencia_proveedor', models.CharField(blank=True, help_text='Número de cotización o referencia del proveedor', max_length=50, verbose_name='Número Referencia Proveedor')),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True, verbose_name='Fecha Creación')),
                ('fecha_actualizacion', models.DateTimeField(auto_now=True, verbose_name='Última Actualización')),
                ('fecha_cancelacion', models.DateTimeField(blank=True, null=True, verbose_name='Fecha de Cancelación')),
                ('motivo_cancelacion', models.TextField(blank=True, verbose_name='Motivo de Cancelación')),
            ],
            options={
                'verbose_name': 'Orden de Compra',
                'verbose_name_plural': 'Órdenes de Compra',
                'ordering': ['-fecha_creacion'],
            },
        ),
        migrations.CreateModel(
            name='SolicitudCompra',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('numero', models.CharField(max_length=20, unique=True, verbose_name='Número de Solicitud')),
                ('titulo', models.CharField(max_length=200, verbose_name='Título de la Solicitud')),
                ('descripcion', models.TextField(verbose_name='Descripción')),
                ('estado', models.CharField(choices=[('borrador', 'Borrador'), ('pendiente', 'Pendiente de Aprobación'), ('aprobada', 'Aprobada'), ('rechazada', 'Rechazada'), ('convertida', 'Convertida a OC'), ('cancelada', 'Cancelada')], default='borrador', max_length=20, verbose_name='Estado')),
                ('prioridad', models.CharField(choices=[('baja', 'Baja'), ('media', 'Media'), ('alta', 'Alta'), ('urgente', 'Urgente')], default='media', max_length=20, verbose_name='Prioridad')),
                ('fecha_solicitud', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de Solicitud')),
                ('fecha_requerida', models.DateField(verbose_name='Fecha Requerida')),
                ('fecha_aprobacion', models.DateTimeField(blank=True, null=True, verbose_name='Fecha de Aprobación')),
                ('departamento', models.CharField(max_length=100, verbose_name='Departamento Solicitante')),
                ('centro_costo', models.CharField(blank=True, max_length=50, verbose_name='Centro de Costo')),
                ('justificacion', models.TextField(verbose_name='Justificación de la Compra')),
                ('observaciones', models.TextField(blank=True, verbose_name='Observaciones')),
                ('observaciones_aprobacion', models.TextField(blank=True, verbose_name='Observaciones de Aprobación')),
                ('presupuesto_estimado', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Presupuesto Estimado')),
                ('aprobado_por', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='solicitudes_compra_aprobadas', to=settings.AUTH_USER_MODEL, verbose_name='Aprobado por')),
                ('orden_compra_generada', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='compras.ordencompra', verbose_name='Orden de Compra Generada')),
                ('solicitante', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='solicitudes_compra_creadas', to=settings.AUTH_USER_MODEL, verbose_name='Solicitante')),
            ],
            options={
                'verbose_name': 'Solicitud de Compra',
                'verbose_name_plural': 'Solicitudes de Compra',
                'ordering': ['-fecha_solicitud'],
            },
        ),
        migrations.CreateModel(
            name='RecepcionCompra',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('numero', models.CharField(max_length=20, unique=True, verbose_name='Número de Recepción')),
                ('fecha_recepcion', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Fecha de Recepción')),
                ('numero_factura_proveedor', models.CharField(blank=True, max_length=50, verbose_name='Número Factura Proveedor')),
                ('numero_remision', models.CharField(blank=True, max_length=50, verbose_name='Número de Remisión')),
                ('transportadora', models.CharField(blank=True, max_length=100, verbose_name='Transportadora')),
                ('recepcion_completa', models.BooleanField(default=False, help_text='Indica si esta recepción completa la orden de compra', verbose_name='Recepción Completa')),
                ('observaciones', models.TextField(blank=True, verbose_name='Observaciones')),
                ('observaciones_calidad', models.TextField(blank=True, help_text='Notas sobre la calidad de los productos recibidos', verbose_name='Observaciones de Calidad')),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True, verbose_name='Fecha Creación')),
                ('orden_compra', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='recepciones', to='compras.ordencompra', verbose_name='Orden de Compra')),
                ('usuario_recepcion', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='recepciones_realizadas', to=settings.AUTH_USER_MODEL, verbose_name='Recibido por')),
            ],
            options={
                'verbose_name': 'Recepción de Compra',
                'verbose_name_plural': 'Recepciones de Compra',
                'ordering': ['-fecha_recepcion'],
            },
        ),
        migrations.CreateModel(
            name='Proveedor',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('codigo', models.CharField(blank=True, help_text='Código único del proveedor (se genera automáticamente si se deja vacío)', max_length=20, unique=True, verbose_name='Código Proveedor')),
                ('razon_social', models.CharField(max_length=200, verbose_name='Razón Social')),
                ('nombre_comercial', models.CharField(blank=True, max_length=200, verbose_name='Nombre Comercial')),
                ('tipo_documento', models.CharField(choices=[('NIT', 'NIT'), ('CC', 'Cédula de Ciudadanía'), ('CE', 'Cédula de Extranjería'), ('PAS', 'Pasaporte'), ('RUT', 'RUT')], default='NIT', max_length=10, verbose_name='Tipo de Documento')),
                ('numero_documento', models.CharField(max_length=50, unique=True, verbose_name='Número de Documento')),
                ('telefono', models.CharField(blank=True, max_length=20, verbose_name='Teléfono')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='Email')),
                ('sitio_web', models.URLField(blank=True, verbose_name='Sitio Web')),
                ('direccion', models.TextField(verbose_name='Dirección')),
                ('codigo_postal', models.CharField(blank=True, max_length=10, verbose_name='Código Postal')),
                ('condiciones_pago', models.CharField(choices=[('contado', 'Contado'), ('credito_8', '8 días'), ('credito_15', '15 días'), ('credito_30', '30 días'), ('credito_45', '45 días'), ('credito_60', '60 días'), ('credito_90', '90 días')], default='contado', max_length=20, verbose_name='Condiciones de Pago')),
                ('limite_credito', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Límite de Crédito')),
                ('descuento_comercial', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Descuento general otorgado por el proveedor', max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Descuento Comercial (%)')),
                ('contacto_nombre', models.CharField(blank=True, max_length=100, verbose_name='Nombre del Contacto')),
                ('contacto_cargo', models.CharField(blank=True, max_length=100, verbose_name='Cargo del Contacto')),
                ('contacto_telefono', models.CharField(blank=True, max_length=20, verbose_name='Teléfono del Contacto')),
                ('contacto_email', models.EmailField(blank=True, max_length=254, verbose_name='Email del Contacto')),
                ('observaciones', models.TextField(blank=True, verbose_name='Observaciones')),
                ('activo', models.BooleanField(default=True, verbose_name='Activo')),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True, verbose_name='Fecha Creación')),
                ('fecha_actualizacion', models.DateTimeField(auto_now=True, verbose_name='Última Actualización')),
                ('ciudad', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='ventas.ciudad', verbose_name='Ciudad')),
                ('usuario_creacion', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='proveedores_creados', to=settings.AUTH_USER_MODEL, verbose_name='Creado por')),
            ],
            options={
                'verbose_name': 'Proveedor',
                'verbose_name_plural': 'Proveedores',
                'ordering': ['razon_social'],
            },
        ),
        migrations.AddField(
            model_name='ordencompra',
            name='proveedor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='ordenes_compra', to='compras.proveedor', verbose_name='Proveedor'),
        ),
        migrations.AddField(
            model_name='ordencompra',
            name='usuario_cancelacion',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ordenes_compra_canceladas', to=settings.AUTH_USER_MODEL, verbose_name='Cancelado por'),
        ),
        migrations.AddField(
            model_name='ordencompra',
            name='usuario_creacion',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ordenes_compra_creadas', to=settings.AUTH_USER_MODEL, verbose_name='Creado por'),
        ),
        migrations.CreateModel(
            name='ItemSolicitudCompra',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('descripcion_item', models.TextField(verbose_name='Descripción del Item')),
                ('especificaciones', models.TextField(blank=True, verbose_name='Especificaciones Técnicas')),
                ('cantidad', models.DecimalField(decimal_places=3, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.001'))], verbose_name='Cantidad')),
                ('unidad_medida', models.CharField(default='UND', max_length=20, verbose_name='Unidad de Medida')),
                ('precio_estimado', models.DecimalField(decimal_places=4, default=Decimal('0.0000'), max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.0000'))], verbose_name='Precio Unitario Estimado')),
                ('total_estimado', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=15, verbose_name='Total Estimado')),
                ('observaciones', models.TextField(blank=True, verbose_name='Observaciones')),
                ('producto', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='inventario.producto', verbose_name='Producto')),
                ('proveedor_sugerido', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='compras.proveedor', verbose_name='Proveedor Sugerido')),
                ('solicitud', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='compras.solicitudcompra', verbose_name='Solicitud de Compra')),
            ],
            options={
                'verbose_name': 'Item Solicitud de Compra',
                'verbose_name_plural': 'Items Solicitud de Compra',
            },
        ),
        migrations.CreateModel(
            name='ItemRecepcionCompra',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('cantidad_recibida', models.DecimalField(decimal_places=3, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.001'))], verbose_name='Cantidad Recibida')),
                ('calidad_aceptable', models.BooleanField(default=True, verbose_name='Calidad Aceptable')),
                ('observaciones_item', models.TextField(blank=True, verbose_name='Observaciones del Item')),
                ('item_orden', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='compras.itemordencompra', verbose_name='Item de Orden')),
                ('recepcion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='compras.recepcioncompra', verbose_name='Recepción')),
            ],
            options={
                'verbose_name': 'Item Recepción de Compra',
                'verbose_name_plural': 'Items Recepción de Compra',
            },
        ),
        migrations.AddField(
            model_name='itemordencompra',
            name='orden_compra',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='compras.ordencompra', verbose_name='Orden de Compra'),
        ),
        migrations.AddField(
            model_name='itemordencompra',
            name='producto',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='inventario.producto', verbose_name='Producto'),
        ),
        migrations.AddField(
            model_name='itemordencompra',
            name='variante',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='inventario.varianteproducto', verbose_name='Variante'),
        ),
        migrations.AddIndex(
            model_name='solicitudcompra',
            index=models.Index(fields=['numero'], name='compras_sol_numero_792fb9_idx'),
        ),
        migrations.AddIndex(
            model_name='solicitudcompra',
            index=models.Index(fields=['estado', 'fecha_solicitud'], name='compras_sol_estado_eebee1_idx'),
        ),
        migrations.AddIndex(
            model_name='solicitudcompra',
            index=models.Index(fields=['solicitante', 'estado'], name='compras_sol_solicit_32f77f_idx'),
        ),
        migrations.AddIndex(
            model_name='proveedor',
            index=models.Index(fields=['numero_documento'], name='compras_pro_numero__41b6fa_idx'),
        ),
        migrations.AddIndex(
            model_name='proveedor',
            index=models.Index(fields=['codigo'], name='compras_pro_codigo_d24fc6_idx'),
        ),
        migrations.AddIndex(
            model_name='proveedor',
            index=models.Index(fields=['activo'], name='compras_pro_activo_ba1512_idx'),
        ),
        migrations.AddIndex(
            model_name='ordencompra',
            index=models.Index(fields=['numero'], name='compras_ord_numero_c3c69c_idx'),
        ),
        migrations.AddIndex(
            model_name='ordencompra',
            index=models.Index(fields=['estado', 'fecha_orden'], name='compras_ord_estado_4131c6_idx'),
        ),
        migrations.AddIndex(
            model_name='ordencompra',
            index=models.Index(fields=['proveedor', 'estado'], name='compras_ord_proveed_fa1819_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='itemordencompra',
            unique_together={('orden_compra', 'producto', 'variante')},
        ),
    ]
